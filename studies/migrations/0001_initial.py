# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-11 12:48
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Short identifying code to classify a condition.', max_length=10, unique=True, verbose_name='Code')),
                ('label', models.CharField(help_text='Descriptive name for the condition.', max_length=100, verbose_name='Label')),
                ('is_qualifier', models.BooleanField(default=False, help_text='Declares whether the domain defines a qualifier')),
            ],
            options={
                'verbose_name_plural': 'domains',
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='A readable label for the Filter.', max_length=100, null=True)),
                ('study_field', models.CharField(blank=True, help_text='\n        The field on the Study model the filter applies to. ', max_length=20, null=True)),
                ('domain', models.ForeignKey(blank=True, help_text='\n       The domain the condition falls under. Must supply either domain\n       or study_field not both.', null=True, on_delete=django.db.models.deletion.CASCADE, to='studies.Domain', verbose_name='Domain')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(help_text='Number of observations associated with the specified study and codes.', null=True)),
            ],
            options={
                'verbose_name_plural': 'queries',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_id', models.CharField(help_text='Unique ID to reference the study.', max_length=50, unique=True, verbose_name='Study ID')),
                ('short_id', models.CharField(help_text='Short acronym for the study.', max_length=30, null=True, verbose_name='Short ID')),
                ('description', models.CharField(help_text='Detailed description of the study.', max_length=500, null=True, verbose_name='Description')),
                ('short_description', models.CharField(help_text='Short description of the subject of the study.', max_length=250, null=True, verbose_name='Short Description')),
                ('study_type', models.CharField(choices=[('Cross Sectional', 'Cross Sectional'), ('Registry', 'Registry'), ('Longitudinal', 'Longitudinal'), ('Aggregate', 'Aggregate'), ('Mouse', 'Mouse'), ('Survey', 'Survey'), ('Ex Vivo', 'Ex Vivo'), ('TBD', 'TBD')], help_text='The type of study carried out.', max_length=50, null=True, verbose_name='Study Type')),
                ('start_year', models.IntegerField(help_text='Year when study was initiated.', null=True, verbose_name='Start Year')),
                ('stop_year', models.IntegerField(help_text='Year when study was completed.', null=True, verbose_name='Stop Year')),
                ('country', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=3), help_text='List of countries involved in the study.', null=True, size=None, verbose_name='Country')),
                ('intervention_type', models.CharField(help_text='The type of intervention performed in the study.', max_length=50, null=True)),
                ('subject_count', models.IntegerField(help_text='Number of subjects in the study.', null=True, verbose_name='Subject Count')),
                ('grant_folder', models.CharField(help_text='Grant folder the study is filed under.', max_length=50, null=True, verbose_name='Grant Folder')),
                ('status', models.CharField(help_text='Current status of the study.', max_length=50, null=True, verbose_name='Status')),
                ('analysis_folder', models.CharField(help_text='Folder the study analyses are filed under.', max_length=100, null=True, verbose_name='Analysis Folder')),
                ('gest_age', models.CharField(help_text='Whether the study includes gestational age.', max_length=10, null=True, verbose_name='Gestational Age')),
            ],
            options={
                'verbose_name_plural': 'studies',
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='A specific category under the domain.', max_length=100, null=True, verbose_name='Category')),
                ('code', models.CharField(help_text='Short identifying code to classify a condition.', max_length=10, verbose_name='Code')),
                ('label', models.CharField(help_text='Descriptive name for the condition.', max_length=100, verbose_name='Label')),
                ('domain', models.ForeignKey(help_text='The broad category the condition falls under.', on_delete=django.db.models.deletion.CASCADE, to='studies.Domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name_plural': 'variables',
            },
        ),
        migrations.AddField(
            model_name='observationcount',
            name='codes',
            field=models.ManyToManyField(help_text='The codes used to classify the query.', to='studies.Variable'),
        ),
        migrations.AddField(
            model_name='observationcount',
            name='study',
            field=models.ForeignKey(help_text='The study associated with the query.', on_delete=django.db.models.deletion.CASCADE, to='studies.Study'),
        ),
        migrations.AlterUniqueTogether(
            name='variable',
            unique_together=set([('domain', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='filter',
            unique_together=set([('domain', 'study_field')]),
        ),
    ]
